name: Deploy to AWS

on:
  pull_request:
    types: [labeled]

env:
  AWS_REGION: us-east-1
  AWS_ECR_REPO: my-ecr-repo
  AWS_EB_APP_NAME: my-app
  AWS_EB_ENV_NAME: my-app-env

jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'stage')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: npm install and build webpack
        run: |
          npm install
          npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: webpack artifacts
          path: public/

  build-docker:
    runs-on: ubuntu-latest
    needs: build
    name: Build Docker Image and Push to AWS ECR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: webpack artifacts
          path: public

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          REPOSITORY_URI=$(aws ecr describe-repositories --repository-names $AWS_ECR_REPO --query "repositories[0].repositoryUri" --output text)
          IMAGE_TAG=${{ github.sha }}
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .
          docker push $REPOSITORY_URI:$IMAGE_TAG
        env:
          AWS_ECR_REPO: ${{ env.AWS_ECR_REPO }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    name: Deploy to AWS Elastic Beanstalk

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment --application-name $AWS_EB_APP_NAME --environment-name $AWS_EB_ENV_NAME --version-label ${{ github.sha }}
